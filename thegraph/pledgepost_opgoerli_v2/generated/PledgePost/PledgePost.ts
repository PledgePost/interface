// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Allocated extends ethereum.Event {
  get params(): Allocated__Params {
    return new Allocated__Params(this);
  }
}

export class Allocated__Params {
  _event: Allocated;

  constructor(event: Allocated) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get articleId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ArticleDonated extends ethereum.Event {
  get params(): ArticleDonated__Params {
    return new ArticleDonated__Params(this);
  }
}

export class ArticleDonated__Params {
  _event: ArticleDonated;

  constructor(event: ArticleDonated) {
    this._event = event;
  }

  get author(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get articleId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ArticlePosted extends ethereum.Event {
  get params(): ArticlePosted__Params {
    return new ArticlePosted__Params(this);
  }
}

export class ArticlePosted__Params {
  _event: ArticlePosted;

  constructor(event: ArticlePosted) {
    this._event = event;
  }

  get author(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get content(): string {
    return this._event.parameters[1].value.toString();
  }

  get articleId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoundApplied extends ethereum.Event {
  get params(): RoundApplied__Params {
    return new RoundApplied__Params(this);
  }
}

export class RoundApplied__Params {
  _event: RoundApplied;

  constructor(event: RoundApplied) {
    this._event = event;
  }

  get author(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get articleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoundCreated extends ethereum.Event {
  get params(): RoundCreated__Params {
    return new RoundCreated__Params(this);
  }
}

export class RoundCreated__Params {
  _event: RoundCreated;

  constructor(event: RoundCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ipoolAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get roundId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get name(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get startDate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class PledgePost__getAllAuthorArticleResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get author(): Address {
    return this[1].toAddress();
  }

  get content(): string {
    return this[2].toString();
  }

  get donationsReceived(): BigInt {
    return this[3].toBigInt();
  }
}

export class PledgePost__getAppliedArticleResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get author(): Address {
    return this[1].toAddress();
  }

  get content(): string {
    return this[2].toString();
  }

  get donationsReceived(): BigInt {
    return this[3].toBigInt();
  }
}

export class PledgePost__getAppliedRoundResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get name(): Bytes {
    return this[2].toBytes();
  }

  get description(): Bytes {
    return this[3].toBytes();
  }

  get poolAddress(): Address {
    return this[4].toAddress();
  }

  get poolAmount(): BigInt {
    return this[5].toBigInt();
  }

  get startDate(): BigInt {
    return this[6].toBigInt();
  }

  get endDate(): BigInt {
    return this[7].toBigInt();
  }

  get isActive(): boolean {
    return this[8].toBoolean();
  }
}

export class PledgePost__getAuthorArticleResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get author(): Address {
    return this[1].toAddress();
  }

  get content(): string {
    return this[2].toString();
  }

  get donationsReceived(): BigInt {
    return this[3].toBigInt();
  }
}

export class PledgePost__getRoundResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get name(): Bytes {
    return this[2].toBytes();
  }

  get description(): Bytes {
    return this[3].toBytes();
  }

  get poolAddress(): Address {
    return this[4].toAddress();
  }

  get poolAmount(): BigInt {
    return this[5].toBigInt();
  }

  get startDate(): BigInt {
    return this[6].toBigInt();
  }

  get endDate(): BigInt {
    return this[7].toBigInt();
  }

  get isActive(): boolean {
    return this[8].toBoolean();
  }
}

export class PledgePost extends ethereum.SmartContract {
  static bind(address: Address): PledgePost {
    return new PledgePost("PledgePost", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  checkAdminRole(_admin: Address): boolean {
    let result = super.call(
      "checkAdminRole",
      "checkAdminRole(address):(bool)",
      [ethereum.Value.fromAddress(_admin)]
    );

    return result[0].toBoolean();
  }

  try_checkAdminRole(_admin: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkAdminRole",
      "checkAdminRole(address):(bool)",
      [ethereum.Value.fromAddress(_admin)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkOwner(_sender: Address, _author: Address, _articleId: BigInt): boolean {
    let result = super.call(
      "checkOwner",
      "checkOwner(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkOwner(
    _sender: Address,
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkOwner",
      "checkOwner(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkScore(uid: Bytes, recipient: Address, score: BigInt): boolean {
    let result = super.call(
      "checkScore",
      "checkScore(bytes32,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(uid),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(score)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkScore(
    uid: Bytes,
    recipient: Address,
    score: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkScore",
      "checkScore(bytes32,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(uid),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(score)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eas(): Address {
    let result = super.call("eas", "eas():(address)", []);

    return result[0].toAddress();
  }

  try_eas(): ethereum.CallResult<Address> {
    let result = super.tryCall("eas", "eas():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllAuthorArticle(
    _author: Address
  ): Array<PledgePost__getAllAuthorArticleResultValue0Struct> {
    let result = super.call(
      "getAllAuthorArticle",
      "getAllAuthorArticle(address):((uint256,address,string,uint256)[])",
      [ethereum.Value.fromAddress(_author)]
    );

    return result[0].toTupleArray<
      PledgePost__getAllAuthorArticleResultValue0Struct
    >();
  }

  try_getAllAuthorArticle(
    _author: Address
  ): ethereum.CallResult<
    Array<PledgePost__getAllAuthorArticleResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllAuthorArticle",
      "getAllAuthorArticle(address):((uint256,address,string,uint256)[])",
      [ethereum.Value.fromAddress(_author)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<PledgePost__getAllAuthorArticleResultValue0Struct>()
    );
  }

  getAllocation(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): BigInt {
    let result = super.call(
      "getAllocation",
      "getAllocation(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getAllocation(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAllocation",
      "getAllocation(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApplicationStatus(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): i32 {
    let result = super.call(
      "getApplicationStatus",
      "getApplicationStatus(uint256,address,uint256):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toI32();
  }

  try_getApplicationStatus(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getApplicationStatus",
      "getApplicationStatus(uint256,address,uint256):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getAppliedArticle(
    _roundId: BigInt,
    _index: BigInt
  ): PledgePost__getAppliedArticleResultValue0Struct {
    let result = super.call(
      "getAppliedArticle",
      "getAppliedArticle(uint256,uint256):((uint256,address,string,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return changetype<PledgePost__getAppliedArticleResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAppliedArticle(
    _roundId: BigInt,
    _index: BigInt
  ): ethereum.CallResult<PledgePost__getAppliedArticleResultValue0Struct> {
    let result = super.tryCall(
      "getAppliedArticle",
      "getAppliedArticle(uint256,uint256):((uint256,address,string,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PledgePost__getAppliedArticleResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getAppliedRound(
    _author: Address,
    _articleId: BigInt
  ): PledgePost__getAppliedRoundResultValue0Struct {
    let result = super.call(
      "getAppliedRound",
      "getAppliedRound(address,uint256):((uint256,address,bytes,bytes,address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return changetype<PledgePost__getAppliedRoundResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAppliedRound(
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<PledgePost__getAppliedRoundResultValue0Struct> {
    let result = super.tryCall(
      "getAppliedRound",
      "getAppliedRound(address,uint256):((uint256,address,bytes,bytes,address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PledgePost__getAppliedRoundResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getArticleDonators(_author: Address, _articleId: BigInt): Array<Address> {
    let result = super.call(
      "getArticleDonators",
      "getArticleDonators(address,uint256):(address[])",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getArticleDonators(
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getArticleDonators",
      "getArticleDonators(address,uint256):(address[])",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAuthorArticle(
    _author: Address,
    _articleId: BigInt
  ): PledgePost__getAuthorArticleResultValue0Struct {
    let result = super.call(
      "getAuthorArticle",
      "getAuthorArticle(address,uint256):((uint256,address,string,uint256))",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return changetype<PledgePost__getAuthorArticleResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAuthorArticle(
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<PledgePost__getAuthorArticleResultValue0Struct> {
    let result = super.tryCall(
      "getAuthorArticle",
      "getAuthorArticle(address,uint256):((uint256,address,string,uint256))",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PledgePost__getAuthorArticleResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getDonatedAmount(_author: Address, _articleId: BigInt): BigInt {
    let result = super.call(
      "getDonatedAmount",
      "getDonatedAmount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getDonatedAmount(
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDonatedAmount",
      "getDonatedAmount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMatchingAmount(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): BigInt {
    let result = super.call(
      "getMatchingAmount",
      "getMatchingAmount(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getMatchingAmount(
    _roundId: BigInt,
    _author: Address,
    _articleId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMatchingAmount",
      "getMatchingAmount(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_roundId),
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPassportAttestation(uid: Bytes, recipient: Address): BigInt {
    let result = super.call(
      "getPassportAttestation",
      "getPassportAttestation(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(uid),
        ethereum.Value.fromAddress(recipient)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPassportAttestation(
    uid: Bytes,
    recipient: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPassportAttestation",
      "getPassportAttestation(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(uid),
        ethereum.Value.fromAddress(recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRound(_roundId: BigInt): PledgePost__getRoundResultValue0Struct {
    let result = super.call(
      "getRound",
      "getRound(uint256):((uint256,address,bytes,bytes,address,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(_roundId)]
    );

    return changetype<PledgePost__getRoundResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getRound(
    _roundId: BigInt
  ): ethereum.CallResult<PledgePost__getRoundResultValue0Struct> {
    let result = super.tryCall(
      "getRound",
      "getRound(uint256):((uint256,address,bytes,bytes,address,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(_roundId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PledgePost__getRoundResultValue0Struct>(value[0].toTuple())
    );
  }

  getRoundLength(): BigInt {
    let result = super.call("getRoundLength", "getRoundLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getRoundLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoundLength",
      "getRoundLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSqrtSumRoundDonation(
    _author: Address,
    _articleId: BigInt,
    _roundId: BigInt
  ): BigInt {
    let result = super.call(
      "getSqrtSumRoundDonation",
      "getSqrtSumRoundDonation(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getSqrtSumRoundDonation(
    _author: Address,
    _articleId: BigInt,
    _roundId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSqrtSumRoundDonation",
      "getSqrtSumRoundDonation(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_author),
        ethereum.Value.fromUnsignedBigInt(_articleId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSquareRoot(x: BigInt): BigInt {
    let result = super.call(
      "getSquareRoot",
      "getSquareRoot(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(x)]
    );

    return result[0].toBigInt();
  }

  try_getSquareRoot(x: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSquareRoot",
      "getSquareRoot(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(x)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTotalSquareSqrtSum(_roundId: BigInt): BigInt {
    let result = super.call(
      "getTotalSquareSqrtSum",
      "getTotalSquareSqrtSum(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_roundId)]
    );

    return result[0].toBigInt();
  }

  try_getTotalSquareSqrtSum(_roundId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalSquareSqrtSum",
      "getTotalSquareSqrtSum(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_roundId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AllocateCall extends ethereum.Call {
  get inputs(): AllocateCall__Inputs {
    return new AllocateCall__Inputs(this);
  }

  get outputs(): AllocateCall__Outputs {
    return new AllocateCall__Outputs(this);
  }
}

export class AllocateCall__Inputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AllocateCall__Outputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }
}

export class AcceptApplicationCall extends ethereum.Call {
  get inputs(): AcceptApplicationCall__Inputs {
    return new AcceptApplicationCall__Inputs(this);
  }

  get outputs(): AcceptApplicationCall__Outputs {
    return new AcceptApplicationCall__Outputs(this);
  }
}

export class AcceptApplicationCall__Inputs {
  _call: AcceptApplicationCall;

  constructor(call: AcceptApplicationCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _author(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _articleId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AcceptApplicationCall__Outputs {
  _call: AcceptApplicationCall;

  constructor(call: AcceptApplicationCall) {
    this._call = call;
  }
}

export class ActivateRoundCall extends ethereum.Call {
  get inputs(): ActivateRoundCall__Inputs {
    return new ActivateRoundCall__Inputs(this);
  }

  get outputs(): ActivateRoundCall__Outputs {
    return new ActivateRoundCall__Outputs(this);
  }
}

export class ActivateRoundCall__Inputs {
  _call: ActivateRoundCall;

  constructor(call: ActivateRoundCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ActivateRoundCall__Outputs {
  _call: ActivateRoundCall;

  constructor(call: ActivateRoundCall) {
    this._call = call;
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class ApplyForRoundCall extends ethereum.Call {
  get inputs(): ApplyForRoundCall__Inputs {
    return new ApplyForRoundCall__Inputs(this);
  }

  get outputs(): ApplyForRoundCall__Outputs {
    return new ApplyForRoundCall__Outputs(this);
  }
}

export class ApplyForRoundCall__Inputs {
  _call: ApplyForRoundCall;

  constructor(call: ApplyForRoundCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _articleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApplyForRoundCall__Outputs {
  _call: ApplyForRoundCall;

  constructor(call: ApplyForRoundCall) {
    this._call = call;
  }
}

export class ChangeMinimumAmountCall extends ethereum.Call {
  get inputs(): ChangeMinimumAmountCall__Inputs {
    return new ChangeMinimumAmountCall__Inputs(this);
  }

  get outputs(): ChangeMinimumAmountCall__Outputs {
    return new ChangeMinimumAmountCall__Outputs(this);
  }
}

export class ChangeMinimumAmountCall__Inputs {
  _call: ChangeMinimumAmountCall;

  constructor(call: ChangeMinimumAmountCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeMinimumAmountCall__Outputs {
  _call: ChangeMinimumAmountCall;

  constructor(call: ChangeMinimumAmountCall) {
    this._call = call;
  }
}

export class CreateRoundCall extends ethereum.Call {
  get inputs(): CreateRoundCall__Inputs {
    return new CreateRoundCall__Inputs(this);
  }

  get outputs(): CreateRoundCall__Outputs {
    return new CreateRoundCall__Outputs(this);
  }
}

export class CreateRoundCall__Inputs {
  _call: CreateRoundCall;

  constructor(call: CreateRoundCall) {
    this._call = call;
  }

  get _name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _description(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateRoundCall__Outputs {
  _call: CreateRoundCall;

  constructor(call: CreateRoundCall) {
    this._call = call;
  }
}

export class DeactivateRoundCall extends ethereum.Call {
  get inputs(): DeactivateRoundCall__Inputs {
    return new DeactivateRoundCall__Inputs(this);
  }

  get outputs(): DeactivateRoundCall__Outputs {
    return new DeactivateRoundCall__Outputs(this);
  }
}

export class DeactivateRoundCall__Inputs {
  _call: DeactivateRoundCall;

  constructor(call: DeactivateRoundCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeactivateRoundCall__Outputs {
  _call: DeactivateRoundCall;

  constructor(call: DeactivateRoundCall) {
    this._call = call;
  }
}

export class DenyApplicationCall extends ethereum.Call {
  get inputs(): DenyApplicationCall__Inputs {
    return new DenyApplicationCall__Inputs(this);
  }

  get outputs(): DenyApplicationCall__Outputs {
    return new DenyApplicationCall__Outputs(this);
  }
}

export class DenyApplicationCall__Inputs {
  _call: DenyApplicationCall;

  constructor(call: DenyApplicationCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _author(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _articleId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DenyApplicationCall__Outputs {
  _call: DenyApplicationCall;

  constructor(call: DenyApplicationCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DonateToArticleCall extends ethereum.Call {
  get inputs(): DonateToArticleCall__Inputs {
    return new DonateToArticleCall__Inputs(this);
  }

  get outputs(): DonateToArticleCall__Outputs {
    return new DonateToArticleCall__Outputs(this);
  }
}

export class DonateToArticleCall__Inputs {
  _call: DonateToArticleCall;

  constructor(call: DonateToArticleCall) {
    this._call = call;
  }

  get _author(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _articleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DonateToArticleCall__Outputs {
  _call: DonateToArticleCall;

  constructor(call: DonateToArticleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PostArticleCall extends ethereum.Call {
  get inputs(): PostArticleCall__Inputs {
    return new PostArticleCall__Inputs(this);
  }

  get outputs(): PostArticleCall__Outputs {
    return new PostArticleCall__Outputs(this);
  }
}

export class PostArticleCall__Inputs {
  _call: PostArticleCall;

  constructor(call: PostArticleCall) {
    this._call = call;
  }

  get _content(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class PostArticleCall__Outputs {
  _call: PostArticleCall;

  constructor(call: PostArticleCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateArticleCall extends ethereum.Call {
  get inputs(): UpdateArticleCall__Inputs {
    return new UpdateArticleCall__Inputs(this);
  }

  get outputs(): UpdateArticleCall__Outputs {
    return new UpdateArticleCall__Outputs(this);
  }
}

export class UpdateArticleCall__Inputs {
  _call: UpdateArticleCall;

  constructor(call: UpdateArticleCall) {
    this._call = call;
  }

  get _articleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _content(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateArticleCall__Outputs {
  _call: UpdateArticleCall;

  constructor(call: UpdateArticleCall) {
    this._call = call;
  }
}
