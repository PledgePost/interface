type Allocated @entity(immutable: true) {
  id: Bytes!
  recipientId: Article! # address
  amount: BigInt! # uint256
  token: Bytes! # address
  sender: User! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BatchPayoutSuccessful @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Distributed @entity(immutable: true) {
  id: Bytes!
  recipientId: Article! # address
  recipientAddress: Bytes! # address
  amount: BigInt! # uint256
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DistributionUpdated @entity(immutable: true) {
  id: Bytes!
  merkleRoot: Bytes! # bytes32
  metadata_protocol: BigInt! # uint256
  metadata_pointer: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsDistributed @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  grantee: User! # address
  token: Bytes! # address
  recipientId: Article! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolActive @entity(immutable: true) {
  id: Bytes!
  active: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RecipientStatusUpdated @entity(immutable: true) {
  id: Bytes!
  rowIndex: BigInt! # uint256
  fullRow: BigInt! # uint256
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Registered @entity(immutable: true) {
  id: Bytes!
  recipientId: Article! # address
  data: Bytes! # bytes
  sender: User! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TimestampsUpdated @entity(immutable: true) {
  id: Bytes!
  registrationStartTime: BigInt! # uint64
  registrationEndTime: BigInt! # uint64
  allocationStartTime: BigInt! # uint64
  allocationEndTime: BigInt! # uint64
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdatedRegistration @entity(immutable: true) {
  id: Bytes!
  recipientId: Article! # address
  data: Bytes! # bytes
  sender: Bytes! # address
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Article @entity {
  id: Bytes!
  address: User!
  recipientId: Registered! @derivedFrom(field: "recipientId")
  allocation: Allocated @derivedFrom(field: "recipientId")
  distribution: Distributed @derivedFrom(field: "recipientId")
  fundsDistributed: FundsDistributed @derivedFrom(field: "recipientId")
  updatedRegistration: UpdatedRegistration @derivedFrom(field: "recipientId")
}

type User @entity {
  id: Bytes!
  sender: Registered! @derivedFrom(field: "sender")
  articles: [Article!] @derivedFrom(field: "address")
  donated: [Allocated!] @derivedFrom(field: "sender")
  fundsDistributed: [FundsDistributed!] @derivedFrom(field: "grantee")
}
